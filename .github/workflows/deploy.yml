name: Java CI with Gradle

on:
  push:
    branches:
      - main
  # 可以添加其他触发条件，如pull request等

jobs:
  build:

    runs-on: ubuntu-latest # 指定运行环境

    steps:
      - uses: actions/checkout@v2 # 检出代码到runner上
      - name: Set up JDK 11 # 设置Java开发环境，这里使用的是JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

#      - name: Grant execute permission for Gradlew # 给Gradlew脚本执行权限
#        run: chmod +x gradlew
#
#      - name: Build with Gradle # 使用Gradle构建项目
#        run: ./gradlew build
#
#      - name: Test with Gradle # 使用Gradle运行测试
#        run: ./gradlew test
#
#      - name: Upload Test Results # 上传测试结果，用于在GitHub Actions中显示
#        uses: actions/upload-artifact@v2
#        if: always() # 无论测试是否通过，都上传结果
#        with:
#          name: Test Results
#          path: build/reports/tests/test
#
#      - name: Upload Build Artifacts # 上传构建产物，例如jar包
#        uses: actions/upload-artifact@v2
#        if: success() # 仅在构建成功时上传
#        with:
#          name: Build Artifacts
#          path: build/libs/
      - name: Update version
        run: |
          # Read the current version
          VERSION=$(cat version.md)
          # Extract the major, minor, and patch numbers
          MAJOR=$(echo $VERSION | cut -d. -f1 | cut -d'v' -f2)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)

          # Increment the patch number
          PATCH=$((PATCH + 1))

          # Format the new version number
          NEW_VERSION="v$MAJOR.$MINOR.$PATCH"

          # Update version.md with the new version number
          echo $NEW_VERSION > version.md

      - name: Commit and push
        if: success()
        run: |
          # Commit the updated version file
          git config --local user.email "weixiaobo88@github.com"
          git config --local user.name "weixiaobo88"
          git add version.md
          git commit -m "Update version to ${NEW_VERSION}"
          git push